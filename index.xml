<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>当然我在扯淡</title>
    <link>http://wangerk.com/</link>
    <description>Recent content on 当然我在扯淡</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 18 Feb 2019 20:55:53 +0800</lastBuildDate>
    
	<atom:link href="http://wangerk.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JAVA技术栈</title>
      <link>http://wangerk.com/blog-cn/java/to-be-top-javaer/</link>
      <pubDate>Mon, 18 Feb 2019 20:55:53 +0800</pubDate>
      
      <guid>http://wangerk.com/blog-cn/java/to-be-top-javaer/</guid>
      <description>目录： 《基础篇》JVM——JVM内存结构
《基础篇》JVM——Java内存模型
《基础篇》JVM——Java对象模型
《基础篇》JVM——HotSpot
《基础篇》JVM——垃圾回收
《基础篇》JVM——JVM参数及调优
《基础篇》JVM——常用Java命令
《基础篇》编译与反编译
《基础篇》Java基础知识——阅读源代码
《基础篇》Java基础知识——String相关
《基础篇》Java基础知识——Java中各种关键字
《基础篇》Java基础知识——自动拆装箱
《基础篇》Java基础知识——枚举
《基础篇》Java基础知识——反射
《基础篇》Java基础知识——序列化
《基础篇》Java基础知识——JMS
《基础篇》Java基础知识——泛型
《基础篇》Java基础知识——常用的Java工具库
《基础篇》Java基础知识——单元测试
《进阶篇》设计模式——设计模式合集
《高级篇》Java并发编程——锁
《高级篇》大数据知识—— Zookeeper合集
《高级篇》网络安全知识—— 解决webx的xss和csrf漏洞
《进阶篇》网络编程知识——常用协议
《扩展篇》分布式—— 分布式合集</description>
    </item>
    
    <item>
      <title>Mac OS X常见设置</title>
      <link>http://wangerk.com/blog-cn/2019/02/16/setting/</link>
      <pubDate>Sat, 16 Feb 2019 08:57:08 +0800</pubDate>
      
      <guid>http://wangerk.com/blog-cn/2019/02/16/setting/</guid>
      <description>本小节知识点:  【理解】查看本机配置 【理解】系统开/关机 【理解】键盘设置 【理解】鼠标设置 【理解】网络设置  1.查看本机配置  点击屏幕左上角的黑色苹果   点击&amp;rdquo;关于本机&amp;rdquo;  2.系统开/关机  点击屏幕左上角的黑色苹果 选择&amp;rdquo;睡眠&amp;rdquo; or &amp;ldquo;重新启动&amp;rdquo; or &amp;ldquo;关机&amp;rdquo;   关机快捷键  command + option + control + △   3.键盘设置  点击屏幕左上角的黑色苹果 点击&amp;rdquo;系统偏好设置&amp;rdquo;   选择&amp;rdquo;键盘&amp;rdquo;   设置输入法  4.鼠标设置  查找鼠标   注意, 如果找不到需要关闭鼠标后重新打开   找到后点击继续   看到此图代表鼠标连接成功, 鼠标只需要配对一次, 以后系统会自动配对   注意默认情况下Mac系统不会像windows一样开启鼠标右键, 需要我们手动开启  5.网络设置  点击屏幕左上角的黑色苹果 点击&amp;rdquo;系统偏好设置&amp;rdquo;   选择&amp;rdquo;网络&amp;rdquo;   自动获取IP的方式上网   手动设置IP的方式上网  （本文建议零售价 ￥1，如果你觉得这篇文章有启发，可以点击这里付费)</description>
    </item>
    
    <item>
      <title>Java内存模型</title>
      <link>http://wangerk.com/basics/jvm/java-memory-model/</link>
      <pubDate>Fri, 15 Feb 2019 20:55:53 +0800</pubDate>
      
      <guid>http://wangerk.com/basics/jvm/java-memory-model/</guid>
      <description>本文是《JAVA技术栈系列文章》中的一篇，主要是关于JVM的一些介绍。
持续更新中
 Java内存模型 JVM内存结构 VS Java内存模型 VS Java对象模型(Hollis原创)
再有人问你Java内存模型是什么，就把这篇文章发给他。(Hollis原创)
内存模型是怎么解决缓存一致性问题的？(Hollis原创)
细说Java多线程之内存可见性（视频）（推荐）（如果嫌视频讲的慢，建议使用1.5倍速度观看）
JSR 133: JavaTM Memory Model and Thread Specification Revision（JMM英文官方文档）
Java内存模型FAQ
深入理解Java内存模型（一）——基础
深入理解Java内存模型（二）——重排序
深入理解Java内存模型（三）——顺序一致性
深入理解Java内存模型（四）——volatile
深入理解Java内存模型（五）——锁
深入理解Java内存模型（六）——final
深入理解Java内存模型（七）——总结
Java 理论与实践: 修复 Java 内存模型，第 2 部分（拓展阅读）</description>
    </item>
    
    <item>
      <title>Java内存模型，Java内存管理，Java堆和栈，垃圾回收</title>
      <link>http://wangerk.com/basics/jvm/jvm-memory-structure/</link>
      <pubDate>Fri, 15 Feb 2019 20:55:53 +0800</pubDate>
      
      <guid>http://wangerk.com/basics/jvm/jvm-memory-structure/</guid>
      <description>本文是《JAVA技术栈系列文章》中的一篇，主要是关于JVM的一些介绍。
持续更新中
 参考文章：
Java虚拟机的内存组成以及堆内存介绍
Java堆和栈看这篇就够
Java虚拟机的堆、栈、堆栈如何去理解？
Java 内存之方法区和运行时常量池
从0到1起步-跟我进入堆外内存的奇妙世界
JVM内存结构 VS Java内存模型 VS Java对象模型
参考书籍：《深入理解Java虚拟机》</description>
    </item>
    
    <item>
      <title>Java对象模型</title>
      <link>http://wangerk.com/basics/jvm/java-object-model/</link>
      <pubDate>Fri, 15 Feb 2019 20:55:53 +0800</pubDate>
      
      <guid>http://wangerk.com/basics/jvm/java-object-model/</guid>
      <description>本文是《JAVA技术栈系列文章》中的一篇，主要是关于JVM的一些介绍。
持续更新中
 JVM内存结构 VS Java内存模型 VS Java对象模型
深入理解多线程（二）—— Java的对象模型
深入理解多线程（三）—— Java的对象头</description>
    </item>
    
    <item>
      <title>博文的自愿付费方式</title>
      <link>http://wangerk.com/reward/pay-blog/</link>
      <pubDate>Fri, 15 Feb 2019 20:55:53 +0800</pubDate>
      
      <guid>http://wangerk.com/reward/pay-blog/</guid>
      <description>喜欢我的文章的人，可以自愿付费购买。你可以使用以下方式付款。
 支付宝：  微信：  PayPal：请点击[付款链接]  </description>
    </item>
    
    <item>
      <title>iOS多线程(GCD)合成图片~demo</title>
      <link>http://wangerk.com/blog-cn/2017/05/31/gcd-join-images/</link>
      <pubDate>Wed, 31 May 2017 20:55:53 +0800</pubDate>
      
      <guid>http://wangerk.com/blog-cn/2017/05/31/gcd-join-images/</guid>
      <description> 图片合成效果 //创建队列组 dispatch_group_tgroup =dispatch_group_create(); //1.开子线程下载图片 //创建队列(并发) dispatch_queue_tqueue =dispatch_get_global_queue(0,0); //异步执行并发队列 dispatch_group_async(group, queue, ^{ //1.获取url地址 NSURL*url = [NSURL URLWithString:@&amp;quot;https://imgsa.baidu.com/baike/c0=baike180,5,5,180,60/sign=b531c24482025aafc73f76999a84c001/b21c8701a18b87d6435d2f9b070828381f30fd13.jpg&amp;quot;]; //2.下载图片 NSData *data = [NSData dataWithContentsOfURL:url]; //3.把二进制数据转换成图片 self.image1= [UIImage imageWithData:data]; }); //下载图片2 dispatch_group_async(group, queue, ^{ //1.获取url地址 NSURL*url = [NSURL URLWithString:@&amp;quot;https://imgsa.baidu.com/baike/c0=baike220,5,5,220,73/sign=62c273b38a13632701e0ca61f0e6cb89/8644ebf81a4c510faae40d756059252dd42aa5b9.jpg&amp;quot;]; //2.下载图片 NSData*data = [NSData dataWithContentsOfURL:url]; //3.把二进制数据转换成图片 self.image2= [UIImage imageWithData:data]; }); //合成 dispatch_group_notify(group, queue, ^{ //开启图形上下文 UIGraphicsBeginImageContext(CGSizeMake(200,200)); //画1 [self.image1 drawInRect:CGRectMake(0,0,200,100)]; //画2 [self.image2 drawInRect:CGRectMake(0,100,200,100)]; //根据图形上下文拿到图片 UIImage*image =UIGraphicsGetImageFromCurrentImageContext(); //关闭上下文 UIGraphicsEndImageContext(); dispatch_async(dispatch_get_main_queue(), ^{ self.imageView.image= image; }); });  </description>
    </item>
    
    <item>
      <title>iOS自动适应UILabel的宽度~demo</title>
      <link>http://wangerk.com/blog-cn/2017/05/30/uilable-adjust-width/</link>
      <pubDate>Mon, 30 May 2016 20:55:53 +0800</pubDate>
      
      <guid>http://wangerk.com/blog-cn/2017/05/30/uilable-adjust-width/</guid>
      <description>#import &amp;quot;UILabel+Extension.h&amp;quot; - (void)viewDidLoad { [super viewDidLoad]; //直接引用分类功能 [UILabel createLabelWithContent:@&amp;quot;10011111111110&amp;quot; addView:self.view lableX:10 lableY:111 lableH:30 fontSize:16 backgroundColor:[UIColor redColor] textColor:[UIColor blueColor] borderColor:[UIColor yellowColor]]; } + (instancetype)createLabelWithContent:(NSString *)content addView:(UIView *)view lableX:(CGFloat)lableX lableY:(CGFloat)lableY lableH:(CGFloat)lableH fontSize:(CGFloat)fontSize backgroundColor:(UIColor *)backgroundColor textColor:(UIColor*)textColor borderColor:(UIColor *)borderColor{ NSString *string = [NSString stringWithFormat:@&amp;quot;%@&amp;quot;,content]; CGRect textRect = [self boundingString:string size:CGSizeMake([UIScreenmainScreen].bounds.size.width, [UIScreen mainScreen].bounds.size.height *2) fontSize:fontSize]; CGFloat rowWidth = 0.0; if (string.length == 1) { rowWidth = textRect.size.width + 35; }else{ rowWidth = textRect.size.width + 25; } UILabel *lable = [[UILabel alloc]initWithFrame:CGRectMake(lableX, lableY, rowWidth, lableH)]; lable.</description>
    </item>
    
    <item>
      <title>iOS点击view退出键盘</title>
      <link>http://wangerk.com/blog-cn/2016/04/15/resign-keyboard/</link>
      <pubDate>Fri, 15 Apr 2016 20:55:53 +0800</pubDate>
      
      <guid>http://wangerk.com/blog-cn/2016/04/15/resign-keyboard/</guid>
      <description>//创建 UITapGestureRecognizer *tapGest = [[UITapGestureRecognizer alloc]init]; //监听 [tapGest addTarget:self action:@selector(tapAction)]; [self.view addGestureRecognizer:tapGest]; //退出键盘 - (void)tapAction { //放弃第一响应者resignFirstResponder [self.text resignFirstResponder]; }  </description>
    </item>
    
  </channel>
</rss>